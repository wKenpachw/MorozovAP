23) Веб программирование Python
	https://ru.wikibooks.org/wiki/Flask - тут рассказываются основы того, как и что делать
	для ответа на этот билет будем рассказывать о Flask  и пытаться что-то показать на примере нашей лабы в папке site
	
	Flask является микрофреймворком Python, который имеет модульный дизайн. Данный фреймворк предназначен для создания веб-приложений.
	Платформа поддерживает маршрутизацию URL-адресов, шаблоны (с Jinja2), управление сеансами и имеет некоторые фишки в области безопасности.
	
	
	from flask import Flask
	app = Flask(__name__)
	
	@app.route('/')
	def hello_world():
		return 'Hello World!'
	
	if __name__ == '__main__':
		app.run()
		
	Рассмотрим, как работает программа, которую вы запустили выше:
	Сначала мы импортируем Flask класс. Экземпляр этого класса будет нашим WSGI приложением. Первым аргументом является имя модуля приложения. Если вы используете один модуль (как в данном примере), вы должны использовать __name__, потому что в зависимости от того, было ли это начато как приложение или как импорт модуля, название будет другим ('__main__' по сравнению с реальным именем импорта).
	Далее мы создаем экземпляр этого класса. Мы передаем ему имя модуля или пакета. Это необходимо, так как Flask не знает, где искать шаблоны, статические файлы, и так далее.
	Затем мы используем route(). Декоратор говорит Flask, что URL должен вызывать нашу функцию.
	Функция задает имя, которое также используется для создания URL-адресов для этой функции, и возвращает сообщение, что мы хотим отобразить в браузере пользователя.
	Наконец, мы используем run() функцию для запуска локального сервера с нашим приложением. Условие __name__ == «__main__» означает, что сервер работает только в том случае, если скрипт выполняется непосредственно из Python интерпретатора и не используется в качестве импортированного модуля.